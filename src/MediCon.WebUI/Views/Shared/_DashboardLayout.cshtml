@model ViewModel

<!DOCTYPE html>
<html lang="en"
      class="light-style layout-navbar-fixed layout-menu-fixed layout-compact"
      dir="ltr"
      data-theme="theme-default"
      data-template="vertical-menu-template-no-customizer-starter">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="shortcut icon" href="~/BL Icons/logo.png" type="image/x-icon" />
    <title>@Model.PageTitle</title>

    <link rel="stylesheet" href="~/vuexy/fonts/tabler-icons.css" />
    <link rel="stylesheet" href="~/vuexy/css/core.css" />
    <link rel="stylesheet" href="~/vuexy/css/theme-default.css" />
    <link rel="stylesheet" href="~/vuexy/css/demo.css" />
    <link rel="stylesheet" href="~/vuexy/libs/node-waves/node-waves.css" />
    <link rel="stylesheet" href="~/vuexy/libs/perfect-scrollbar/perfect-scrollbar.css" />

    <link rel="stylesheet" href="~/css/fonts.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/utils.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/dashboard.css" asp-append-version="true" />

    <script>
        const _originalFetch_ = window.fetch;
        window.fetch = async function (url, options) {
            return await _originalFetch_(url, { ...options, credentials: "include", });
        };
    </script>
    <script src="~/vuexy/js/helpers.js"></script>
    <script src="~/vuexy/js/config.js"></script>
    <script src="~/vuexy/libs/jquery/jquery.js"></script>

    @await RenderSectionAsync("Head", required: false)
</head>
<body>

 @*    <div id="loader" class="d-flex justify-content-center align-items-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <div id="loader-text">Loading sdfsdfs</div>
    </div> *@
    <div class="layout-wrapper layout-content-navbar">
        <div class="layout-container">
            <partial name="Partials/Dashboard/_Sidebar" />

            <div class="layout-page">
                <div id="loader" class="d-flex justify-content-center align-items-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <div id="loader-text">Loading</div>
                </div>

                <partial name="Partials/Dashboard/_Navbar" />

                <div class="content-wrapper">
                    <div class="container-xxl flex-grow-1 container-p-y">
                        @if (Model.IsError && Model.ShowError == ShowErrorEnum.DefaultAlert)
                        {
                            <div id="alert" class="alert alert-danger alert-dismissible shadow-sm d-flex align-items-center" role="alert">
                                <span class="text-danger me-2">
                                    <i class="ti ti-ban ti-xs"></i>
                                </span>
                                <span>
                                    @Model.ErrorMessage
                                </span>
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
                                </button>
                            </div>
                        }

                        @RenderBody()
                    </div>
                    <div class="content-backdrop fade"></div>
                </div>
            </div>
        </div>
        <div class="layout-overlay layout-menu-toggle"></div>
        <div class="drag-target"></div>
    </div>

    <script src="~/vuexy/libs/popper/popper.js"></script>
    <script src="~/vuexy/libs/bootstrap/bootstrap.js"></script>
    <script src="~/vuexy/libs/node-waves/node-waves.js"></script>
    <script src="~/vuexy/libs/perfect-scrollbar/perfect-scrollbar.js"></script>
    <script src="~/vuexy/js/menu.js"></script>
    <script src="~/vuexy/js/main.js"></script>

    <script src="~/js/dashboard.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Script", required: false)
</body>
</html>
